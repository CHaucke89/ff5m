##
## LOAD_CELL_TARE implementation
##
## Copyright (C) 2025, Alexander K <https://github.com/drA1ex>
##
## This file may be distributed under the terms of the GNU GPLv3 license

[gcode_macro LOAD_CELL_TARE]
gcode:
    {% set weight = printer["temperature_sensor weightValue"].temperature %}
    {% set threshold_weight = printer.mod_params.variables.cell_weight %}
    {% set start_time = printer.idle_timeout.printing_time %}

    RESPOND PREFIX="//" MSG="LOAD_CELL_TARE: Started load cell tare. Weight: {weight}, threshold: {threshold_weight}"
    
    # Check tare confirmation state reset
    SET_GCODE_VARIABLE MACRO=_LOAD_CELL_TARE_CONFIRM_RESET_STEP VARIABLE=success VALUE=False
    {% for i in range(1, 7) %}
        _LOAD_CELL_TARE_CONFIRM_RESET_STEP ATTEMPT={i}
    {% endfor %}

    # Check bed pressure to ensure no toolhead contact
    # Taring in that case would be incorrect

    _LOAD_CELL_TARE_CHECK_PROBE

    # Try to tare several times, as events may not be received in a single attempt
    SET_GCODE_VARIABLE MACRO=_LOAD_CELL_TARE_STEP VARIABLE=success VALUE=False
    _LOAD_CELL_TARE_SET
    {% for i in range(1, 7) %}
        _LOAD_CELL_TARE_STEP ATTEMPT={i}
    {% endfor %}

    _LOAD_CELL_TARE_RESET_TARE_CONFIRMATION

    WAIT TIME=100
    _LOAD_CELL_TARE_FINAL_CHECK TIME={start_time}

[gcode_macro _LOAD_CELL_TARE_CONFIRM_RESET_STEP]
variable_success: False
gcode:
    {% set success = printer["gcode_macro _LOAD_CELL_TARE_CONFIRM_RESET_STEP"].success %}
    {% if not success %}
        {% if params.ATTEMPT|int <= 5 %}
            {% set level_pin = printer["gcode_button check_level_pin"].state %}
            {% if level_pin == "RELEASED" %}
                SET_GCODE_VARIABLE MACRO=_LOAD_CELL_TARE_CONFIRM_RESET_STEP VARIABLE=success VALUE=True
            {% else %}
                RESPOND PREFIX="//" MSG="Attempt {params.ATTEMPT}. Tare confirmation is not clear ({level_pin}). Try to reset..."

                _LOAD_CELL_TARE_RESET_TARE_CONFIRMATION
                WAIT TIME=100
            {% endif %}
        {% else %}
            _RAISE_WITH_PRINT_CANCEL MSG="Tare conformation did not reset"
        {% endif %}
    {% endif %}

[gcode_macro _LOAD_CELL_TARE_CHECK_PROBE]
gcode:
    # This may trigger a "Timer too close" error.
    # QUERY_PROBE

    # Instead, we simply check the weight value since the MCU handles this in QUERY_PROBE.
    # It checks if the weight is greater than 200; if so, the probe is considered triggered
    
    {% set weight = printer["temperature_sensor weightValue"].temperature %}
    {% if weight > 200 %}
        RESPOND PREFIX="!!" MSG="LOAD_CELL_TARE: Detected bed pressure. Please ensure the bed is clean!"

        SAVE_GCODE_STATE NAME=CELL_TARE

        {% set homed_axes = printer.toolhead.homed_axes %}
        {% if "z" not in homed_axes %}
            G28 Z
            M400
        {% elif printer.toolhead.position.z < 5 %}
            G90
            G1 Z10 F6000
            M400
        {% endif %}

        RESTORE_GCODE_STATE NAME=CELL_TARE
    {% endif %}

[gcode_macro _LOAD_CELL_TARE_STEP]
variable_success: False
gcode:
    {% set success = printer["gcode_macro _LOAD_CELL_TARE_STEP"].success %}
    {% if not success %}
        {% if params.ATTEMPT|int <= 5 %}
            {% set level_pin = printer["gcode_button check_level_pin"].state %}
            {% if level_pin == "PRESSED" %}
                SET_GCODE_VARIABLE MACRO=_LOAD_CELL_TARE_STEP VARIABLE=success VALUE=True
            {% else %}
                {% set weight = printer["temperature_sensor weightValue"].temperature %}
                RESPOND PREFIX="//" MSG="LOAD_CELL_TARE: Attempt {params.ATTEMPT}. No confirmation from level sensor. Weight: {weight}"

                _LOAD_CELL_TARE_SET
            {% endif %}
        {% else %}
            _RAISE_WITH_PRINT_CANCEL MSG="Load cell tare failed. No tare confirmation received"
        {% endif %}
    {% endif %}

[gcode_macro _LOAD_CELL_TARE_FINAL_CHECK]
gcode:
    {% set weight = printer["temperature_sensor weightValue"].temperature %}
    {% set threshold_weight = printer.mod_params.variables.cell_weight %}
    {% set end_time = printer.idle_timeout.printing_time %}

    {% if weight|abs > threshold_weight %}
        _RAISE_WITH_PRINT_CANCEL MSG="Load cell tare failed: weight {weight} > threshold {threshold_weight}"
    {% endif %}

    {% if end_time > 0 %}
        RESPOND PREFIX="//" MSG="LOAD_CELL_TARE: Load cell tare finished in { end_time|int  - params.TIME|int}s."
    {% else %}
        RESPOND PREFIX="//" MSG="LOAD_CELL_TARE: Load cell tare finished."
    {% endif %}

[gcode_macro _LOAD_CELL_TARE_SET]
gcode:
    # Tare is set by toggling level_h1 pin
    SET_PIN PIN=level_h1 VALUE=0
    WAIT TIME=250
    SET_PIN PIN=level_h1 VALUE=1
    WAIT TIME=250
    SET_PIN PIN=level_h1 VALUE=0
    WAIT TIME=250
    SET_PIN PIN=level_h1 VALUE=1
    WAIT TIME=250

[gcode_macro _LOAD_CELL_TARE_RESET_TARE_CONFIRMATION]
gcode:
    SET_PIN PIN=level_clear VALUE=0
    WAIT TIME=10
    SET_PIN PIN=level_clear VALUE=1
    WAIT TIME=10
