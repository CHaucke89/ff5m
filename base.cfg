[skew_correction]

# Регулировка винтов
[screws_tilt_adjust]
screw1: -94, -94
screw1_name: front left screw
screw2: 94, -94
screw2_name: front right screw
screw3: 94, 94
screw3_name: rear right screw
screw4: -94, 94
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 600.
screw_thread: CW-M4

# Макрос для M300 - Звук
[gcode_shell_command audio_freq]
command: audio freq
timeout: 3
verbose: False

[gcode_macro M300]
description: Воспроизвести тон
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|float %}
    RUN_SHELL_COMMAND CMD=audio_freq PARAMS="-f {S} -d {P / 1000}"

# Лунная соната
[gcode_macro M356]
description: Лунная соната
gcode:
    M300 S1318 P50
    M300 S1244 P50
    M300 S1318 P50
    M300 S1244 P50
    M300 S1318 P50
    M300 S987 P50
    M300 S1174 P50
    M300 S1046 P50
    M300 S880 P100

[gcode_macro CHECK_MD5]
description: Проверка MD5 суммы файла
gcode:
  {% if 'FILENAME' in params %}
    {% set filename = params.FILENAME|default("")|string %}
  {% else %}
    {% set filename = printer.virtual_sdcard.file_path|default("")|string  %}
  {% endif %}

  {% if filename != "" %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

    {% if 'DELETE' in params %}
      {% set delete = params.DELETE|default("false")|string %}
    {% endif %}

    RUN_SHELL_COMMAND CMD=check_md5 PARAMS={'"%s %s"' % (filename.replace(" ", "\ "), delete)}
  {% endif %}

# Проверка чек суммы md5
[gcode_shell_command check_md5]
command: /root/printer_data/scripts/checkMD5.sh
timeout: 65.
verbose: False

[gcode_macro SET_BED_TEMPERATURE]
description: Установить температуру стола
gcode:
    {% set temperature = params.TARGET|default(80) %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={temperature}

[gcode_macro BED_TEMPERATURE_WAIT]
description: Ожидать, пока установится температура стола
gcode:
    {% if params.MINIMUM is defined and params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM} MAXIMUM={params.MAXIMUM}
    {% elif params.MINIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={params.MINIMUM}
    {% elif params.MAXIMUM is defined %}
      TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM={params.MAXIMUM}
    {% else %}
      RESPOND TYPE=error MSG="Error on 'BED_TEMPERATURE_WAIT': missing MINIMUM or MAXIMUM."
    {% endif %}

[gcode_macro Bed_Level_Screws_Tune]
description: Калибровка винтов стола
gcode:
      BED_MESH_CLEAR
      SET_BED_TEMPERATURE TARGET=80
      BED_TEMPERATURE_WAIT MINIMUM=78 MAXIMUM=85
      G28
      SCREWS_TILT_CALCULATE
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0

[gcode_macro LOAD_CELL_TARE]
description: Сбросить тензодатчики
variable_success: 0
gcode:
    # reset success
    SET_GCODE_VARIABLE MACRO=LOAD_CELL_TARE VARIABLE=success VALUE=0
    # try set tare, up to 10 times
    {% for i in range(10) %}
        _LOAD_CELL_TARE_IF_NO_SUCCESS
    {% endfor %}
    # final check if successfull
    _LOAD_CELL_TARE_FINAL_CHECK

[gcode_macro _LOAD_CELL_TARE_IF_NO_SUCCESS]
gcode:
    {% if not printer["gcode_macro LOAD_CELL_TARE"].success %}
        _LOAD_CELL_TARE_SET
        _LOAD_CELL_TARE_CHECK
    {% endif %}

[gcode_macro _LOAD_CELL_TARE_SET]
gcode:
    # Tare is set by toggeling level_h1 pin
    SET_PIN PIN=level_h1 VALUE=0
    G4 P500
    M400
    SET_PIN PIN=level_h1 VALUE=1
    G4 P500
    M400
    SET_PIN PIN=level_h1 VALUE=0
    G4 P500
    M400
    SET_PIN PIN=level_h1 VALUE=1
    G4 P500
    M400

[gcode_macro _LOAD_CELL_TARE_CHECK]
gcode:
    # If level check pin is set, tare is successfull.
    {% if "PRESSED" in printer['gcode_button check_level_pin'].state %}
        SET_GCODE_VARIABLE MACRO=LOAD_CELL_TARE VARIABLE=success VALUE=1
    {% endif %}

[gcode_macro _LOAD_CELL_TARE_FINAL_CHECK]
gcode:
    # Check success
    {% if printer["gcode_macro LOAD_CELL_TARE"].success %}
        # Toggle level clear plin.
        # No sure what the level clear pin does. But we do the same as the stock software.
        SET_PIN PIN=level_clear VALUE=0
        G4 P10
        M400
        SET_PIN PIN=level_clear VALUE=1
        RESPOND TYPE=echo MSG="Загрузка тензодатчиков успешна."
    # Else raise error
    {% else %}
        {action_raise_error("Загрузка тензодатчиков ОШИБКА.")}
    {% endif %}

[gcode_macro Auto_Full_Bed_Level]
description: Калибровка стола
gcode:
      {% set extruder_temp = params.EXTRUDER_TEMP|default(120)|float %}
      {% set bed_temp = params.BED_TEMP|default(80)|float %}
      RESPOND PREFIX="info" MSG="Запущена калибровка стола {extruder_temp}/{bed_temp}"
      BED_MESH_CLEAR
      SET_BED_TEMPERATURE TARGET={bed_temp}
      BED_TEMPERATURE_WAIT MINIMUM={bed_temp}
      M109 S{extruder_temp}
      G28
      LOAD_CELL_TARE          ; reset tare before leveling
      BED_MESH_CALIBRATE
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0

# Калибровка PID стола
[gcode_macro M357]
description: Калибровка PID стола
gcode:
  {% if 'E' in params %}
      PID_CALIBRATE HEATER=heater_bed TARGET={params.E}
  {% else %}
      PID_CALIBRATE HEATER=heater_bed TARGET=80
  {% endif %}
  SAVE_CONFIG

[gcode_macro PID_Tune_BED]
description: Калибровка PID стола
gcode:
  {% set temperature = params.TEMPERATURE|default(80) %}
  G28
  M106 S255 ;Sets Print Fans to 100%
  PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
  SAVE_CONFIG

# Калибровка PID экструдера
[gcode_macro PID_Tune_EXTRUDER]
description: Калибровка PID экструдера
gcode:
  {% set temperature = params.TEMPERATURE|default(245) %}
  G28
  M106 S255
  PID_CALIBRATE HEATER=extruder TARGET={temperature}
  SAVE_CONFIG


[gcode_macro LOAD_FILAMENT]
variable_load_distance:  125
gcode:
    {% set speed = params.SPEED|default(450) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{speed} ; extrude with 7.5mm/s
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  75
gcode:
    {% set speed = params.SPEED|default(450) %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E-{unload_distance} F{speed} ; unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PURGE_FILAMENT]
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(450) %}
    SAVE_GCODE_STATE NAME=purge_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed}   ; purge
    RESTORE_GCODE_STATE NAME=purge_state

[gcode_macro LOAD_MATERIAL]
description: Manual filament loading / change
variable_initial_target_temp: 0
gcode:
    # save gcode state
    SAVE_GCODE_STATE NAME=load_material_state
    # save heating state
    SET_GCODE_VARIABLE MACRO=LOAD_MATERIAL VARIABLE=initial_target_temp VALUE={printer["extruder"].target}

    _LOAD_MATERIAL_SELECT

[gcode_macro _LOAD_MATERIAL_SELECT]
gcode:
    {% if not printer["extruder"].target >= printer.configfile.settings['extruder'].min_extrude_temp %}
        # material selection
        RESPOND TYPE=command MSG="action:prompt_begin Material Selection"
        RESPOND TYPE=command MSG="action:prompt_text Select the material type to heat the nozzle."
        RESPOND TYPE=command MSG="action:prompt_button_group_start"
        RESPOND TYPE=command MSG="action:prompt_button PLA|_LOAD_MATERIAL_HEATUP TEMP=210|primary"
        RESPOND TYPE=command MSG="action:prompt_button PETG|_LOAD_MATERIAL_HEATUP TEMP=240|primary"
        RESPOND TYPE=command MSG="action:prompt_button ABS|_LOAD_MATERIAL_HEATUP TEMP=250|primary"
        RESPOND TYPE=command MSG="action:prompt_button_group_end"
        RESPOND TYPE=command MSG="action:prompt_footer_button Abort|_LOAD_MATERIAL_END"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% else %}
        # skip preheating dialog, but wait for target temp
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer["extruder"].target}
        _LOAD_MATERIAL_ACTION
    {% endif %}

[gcode_macro _LOAD_MATERIAL_HEATUP]
gcode:
    {% set extruder_temp = params.TEMP|default(200)|float %}
    M104 S{extruder_temp}
    RESPOND TYPE=command MSG=action:prompt_end
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
    _LOAD_MATERIAL_ACTION

[gcode_macro _LOAD_MATERIAL_ACTION]
gcode:
    # loading / unloading
    RESPOND TYPE=command MSG="action:prompt_begin Filament Loading"
    RESPOND TYPE=command MSG="action:prompt_text Select filament loading action."
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button Load|LOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Unload|UNLOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Purge|PURGE_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Done|_LOAD_MATERIAL_END"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _LOAD_MATERIAL_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    # restore old temp
    M104 S{printer["gcode_macro LOAD_MATERIAL"].initial_target_temp}
    # restore gcode state
    RESTORE_GCODE_STATE NAME=load_material_state

[gcode_macro M600]
gcode:
    {% set X = params.X|default(printer['gcode_macro _CLIENT_VARIABLE'].custom_park_x)|float %}
    {% set Y = params.Y|default(printer['gcode_macro _CLIENT_VARIABLE'].custom_park_y)|float %}
    {% set Z = params.Z|default(printer['gcode_macro _CLIENT_VARIABLE'].custom_park_dz)|float %}
    PAUSE X={X} Y={Y} Z_MIN={Z}
    M400
    RESPOND TYPE=command MSG="action:prompt_begin Filament change"
    RESPOND TYPE=command MSG="action:prompt_text Filament change requested. Please load new filament and press resume."
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button Load|LOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Unload|UNLOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Purge|PURGE_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Resume|_INTERACTIVE_LOAD_END"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _INTERACTIVE_LOAD_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    RESUME

[gcode_shell_command sync]
command: sync
timeout: 3
verbose: False

[gcode_shell_command reboot]
command: reboot
timeout: 3
verbose: False

[gcode_shell_command poweroff]
command: poweroff
timeout: 3
verbose: False

[gcode_macro SHUTDOWN]
description: Выключить принтер
gcode:
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=poweroff

[gcode_macro REBOOT]
description: Перезагрузить принтер
gcode:
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_shell_command ztouch]
command: touch
timeout: 5
verbose: True

[gcode_macro REMOVE_ZMOD]
description: Удалить zmod
gcode:
    RUN_SHELL_COMMAND CMD=ztouch PARAMS="/opt/config/mod/REMOVE"
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_macro SKIP_ZMOD]
description: Перезагрузка в оригинальную систему. Без запуска zmod.
gcode:
    RUN_SHELL_COMMAND CMD=ztouch PARAMS="/opt/config/mod/SKIP_ZMOD"
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_macro SOFT_REMOVE]
description: Удалить zmod. Не удалять root, audio, md5
gcode:
    RUN_SHELL_COMMAND CMD=ztouch PARAMS="/opt/config/mod/SOFT_REMOVE"
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_macro LED_ON]
description: Включить подсветку
gcode:
    SET_LED LED=chamber_led WHITE=1

[gcode_macro LED_OFF]
description: Выключить подсветку
gcode:
    SET_LED LED=chamber_led WHITE=0

[gcode_macro LED]
description: Включить подсветку на несколько процентов
gcode:
    {% set S = params.S|default(50)|int %}
    SET_LED LED=chamber_led WHITE={S/100|float}

[gcode_shell_command zdisplay]
command: /root/printer_data/scripts/zdisplay.sh
timeout: 5
verbose: True

[gcode_macro DISPLAY_ON]
description: Включить стандартный экран и перезгрузить принтер
gcode:
    RUN_SHELL_COMMAND CMD=zdisplay PARAMS="on"

[gcode_macro DISPLAY_OFF]
description: Выключить стандартный экран
gcode:
    RUN_SHELL_COMMAND CMD=zdisplay PARAMS="off"
    RESTART

[gcode_shell_command ps_mem]
command: /root/printer_data/scripts/ps_mem.py
timeout: 5
verbose: True

[gcode_shell_command free]
command: free
timeout: 5
verbose: True

[gcode_macro MEM]
description: Посмотреть расход памяти
gcode:
    RUN_SHELL_COMMAND CMD=ps_mem
    RUN_SHELL_COMMAND CMD=free PARAMS="-m"

[gcode_macro AIR_CIRCULATION_INTERNAL]
description: Turn on internal air circulation
gcode:
    SET_FAN_SPEED FAN=external_fan SPEED=0
    SET_FAN_SPEED FAN=internal_fan SPEED=1
    SET_SERVO SERVO=my_servo ANGLE=95

[gcode_macro AIR_CIRCULATION_EXTERNAL]
description: Turn on external air circulation
gcode:
    SET_FAN_SPEED FAN=external_fan SPEED=.8 ;dropped to 80 percent to quiet it down
    SET_FAN_SPEED FAN=internal_fan SPEED=1
    SET_SERVO SERVO=my_servo ANGLE=180

[gcode_macro AIR_CIRCULATION_STOP]
description: Turn off air circulation
gcode:
    SET_FAN_SPEED FAN=external_fan SPEED=0
    SET_FAN_SPEED FAN=internal_fan SPEED=0
    SET_SERVO SERVO=my_servo ANGLE=95

[gcode_shell_command audio_midi]
command: audio_midi.sh
timeout: 30
verbose: True

[gcode_macro PLAY_MIDI]
description: Проиграть MIDI файл
gcode:
    {% set FILE = params.FILE|default("For_Elise.mid")|string %}
    RUN_SHELL_COMMAND CMD=audio_midi PARAMS="{FILE}"

[gcode_shell_command zcamera]
command: /root/printer_data/scripts/zcamera.sh
timeout: 5
verbose: True

[gcode_macro CAMERA_ON]
description: Использовать альтернативную реализацию камеры
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Отключите камеру на экране принтера"
    RESPOND TYPE=command MSG="action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_show"
    {% set WIDTH  = params.WIDTH|default(640)|int %}
    {% set HEIGHT = params.HEIGHT|default(480)|int %}
    {% set FPS    = params.FPS|default(15)|int %}
    RUN_SHELL_COMMAND CMD=zcamera PARAMS="on {WIDTH} {HEIGHT} {FPS} RESTART"

[gcode_macro CAMERA_OFF]
description: Отключить альтернативную реализацию камеры
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Включите камеру на экране принтера"
    RESPOND TYPE=command MSG="action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_show"
    {% set WIDTH  = params.WIDTH|default(640)|int %}
    {% set HEIGHT = params.HEIGHT|default(480)|int %}
    {% set FPS    = params.FPS|default(15)|int %}
    RUN_SHELL_COMMAND CMD=zcamera PARAMS="off {WIDTH} {HEIGHT} {FPS} RESTART"

[gcode_shell_command date]
command: date
timeout: 30
verbose: True

[gcode_macro DATE_GET]
description: Посмотреть время
gcode:
    {% set DT  = params.DT|default("")|string %}
    RUN_SHELL_COMMAND CMD=date

[gcode_macro DATE_SET]
description: Установить дату и время в формате 2024.01.01-00:00:00
gcode:
    {% set DT  = params.DT|default("2024.01.01-00:00:00")|string %}
    RUN_SHELL_COMMAND CMD=date PARAMS="date {DT}"

