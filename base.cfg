[skew_correction]

# Регулировка винтов
[screws_tilt_adjust]
screw1: -94, -94
screw1_name: front left screw
screw2: 94, -94
screw2_name: front right screw
screw3: 94, 94
screw3_name: rear right screw
screw4: -94, 94
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 600.
screw_thread: CW-M4

# Макрос для M300 - Звук
[gcode_shell_command audio_freq]
command: audio freq
timeout: 3
verbose: False

[gcode_macro M300]
description: Воспроизвести тон
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|float %}
    RUN_SHELL_COMMAND CMD=audio_freq PARAMS="-f {S} -d {P / 1000}"

# Лунная соната
[gcode_macro M356]
description: Лунная соната
gcode:
    M300 S1318 P50
    M300 S1244 P50
    M300 S1318 P50
    M300 S1244 P50
    M300 S1318 P50
    M300 S987 P50
    M300 S1174 P50
    M300 S1046 P50
    M300 S880 P100

[gcode_macro CHECK_MD5]
description: Проверка MD5 суммы файла
gcode:
  {% if 'FILENAME' in params %}
    {% set filename = params.FILENAME|default("")|string %}
  {% else %}
    {% set filename = printer.virtual_sdcard.file_path|default("")|string  %}
  {% endif %}

  {% if filename != "" %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28 Z
        M400
        G28 X
        G28 Y
        M400
        M400
    {% endif %}

    {% if 'DELETE' in params %}
      {% set delete = params.DELETE|default("false")|string %}
    {% endif %}

    RUN_SHELL_COMMAND CMD=check_md5 PARAMS={'"%s %s"' % (filename.replace(" ", "\ "), delete)}
  {% endif %}

# Проверка чек суммы md5
[gcode_shell_command check_md5]
command: /root/printer_data/scripts/checkMD5.sh
timeout: 65.
verbose: False

[gcode_macro BED_LEVEL_SCREWS_TUNE]
description: Калибровка винтов стола
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
    {% set bed_temp = params.BED_TEMP|default(80)|float %}

    RESPOND TYPE=echo MSG="До измерений, не забудьте почистить сопло макросом CLEAR_NOIZE"

    BED_MESH_CLEAR
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}
    TEMPERATURE_WAIT SENSOR=heater_bed  MINIMUM={bed_temp-2} MAXIMUM={bed_temp+3}

    G28 Z
    M400
    G28 X
    G28 Y
    M400
    M400

    SCREWS_TILT_CALCULATE

[gcode_macro LOAD_CELL_TARE]
description: Сброс веса тензодатчиков
variable_success: 0
gcode:
    RESPOND PREFIX="info" MSG="Сброс веса тензодатчиков"
    QUERY_BUTTON button=check_level_pin
    # reset success
    SET_GCODE_VARIABLE MACRO=LOAD_CELL_TARE VARIABLE=success VALUE=0
    # try set tare, up to 10 times
    {% for i in range(10) %}
        RESPOND PREFIX="info" MSG="Поверка №{i}"
        _LOAD_CELL_TARE_IF_NO_SUCCESS
    {% endfor %}
    # final check if successfull
    _LOAD_CELL_TARE_FINAL_CHECK

[gcode_macro _LOAD_CELL_TARE_IF_NO_SUCCESS]
gcode:
    {% if not printer["gcode_macro LOAD_CELL_TARE"].success %}
        _LOAD_CELL_TARE_SET
        _LOAD_CELL_TARE_CHECK
    {% endif %}

[gcode_macro _LOAD_CELL_TARE_SET]
gcode:
    # Tare is set by toggeling _level_h1 pin
    SET_PIN PIN=level_h1 VALUE=0
    G4 P505
    SET_PIN PIN=level_h1 VALUE=1
    G4 P505
    SET_PIN PIN=level_h1 VALUE=0
    G4 P505
    SET_PIN PIN=level_h1 VALUE=1
    G4 P505

[gcode_macro _LOAD_CELL_TARE_CHECK]
gcode:
    QUERY_BUTTON button=check_level_pin
    {% set check_level_pin = printer['gcode_button check_level_pin'].state %}
    RESPOND PREFIX="info" MSG="check_level_pin={check_level_pin}"
    # If level check pin is set, tare is successfull.
    {% if "PRESSED" in printer['gcode_button check_level_pin'].state %}
        SET_GCODE_VARIABLE MACRO=LOAD_CELL_TARE VARIABLE=success VALUE=1
    {% endif %}

[gcode_macro _LOAD_CELL_TARE_FINAL_CHECK]
gcode:
    # Check success
    {% if printer["gcode_macro LOAD_CELL_TARE"].success %}
        # Toggle level clear plin.
        # No sure what the level clear pin does. But we do the same as the stock software.
        SET_PIN PIN=level_clear VALUE=0
        G4 P5
        SET_PIN PIN=level_clear VALUE=1
        G4 P5
        RESPOND PREFIX="info" MSG="Сброс веса тензадатчиков прошел успешно."
    # Else raise error
    {% else %}
        {action_raise_error("Ошибка сброс веса тензадатчиков.")}
    {% endif %}

[gcode_macro _CLEAR_NOIZE]
gcode:
    M106 P0 S255
    {% set zprobe = printer.probe.last_z_result %}
    RESPOND PREFIX="info" MSG="Z-probe={zprobe}"

    G92 E0                   ; обнуляем количество выдавленного пластика

    G1 X-10 F3000
    G1 X-10 Y111 Z{zprobe+0.15} F3000 ; z+0.15
    RESPOND PREFIX="info" MSG="Начало очистки Z={zprobe+0.15}"
    G1 X20 F1200
    G1 X20 Y110 F1200
    G1 X0 Y110 F1200
    G1 X0 Y109 F1200
    G1 X20 Y109 F1200
    G1 X-10 Y108 F1200
    G1 Z{zprobe+0.05} F3000  ; z+0.05
    RESPOND PREFIX="info" MSG="Конец очистки Z={zprobe+0.05}"

[gcode_macro CLEAR_NOIZE]
description: Очистка сопла
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP|default(230)|float %}
    {% set bed_temp = params.BED_TEMP|default(80)|float %}

    RESPOND PREFIX="info" MSG="Запущена родная очистка сопла {extruder_temp}/{bed_temp}"

    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28 Z                    ; Идем домой
        M400
        G28 X
        G28 Y
        M400
        M400
    {% endif %}


    G90                      ; Абсолютные координаты 
    M82                      ; Абсолютные координаты экструдера

    ;M104 S0 T0               ; Сбрасываем температуру
    ;M140 S0

    G1 Z50 F6000             ; Поднимаем стол

    G1 X-20 Y111 F6000       ; Зависаем по центру
    G1 Z5 F3000
    M400

    LOAD_CELL_TARE           ; Сбрасываем тензодатчики

    M140 S{bed_temp}         ; Греем стол
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp} MAXIMUM={bed_temp+4}
    M104 S{extruder_temp} T0 ; Греем экструдер
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp} MAXIMUM={extruder_temp+4}

    LOAD_CELL_TARE           ; Сбрасываем тензодатчики

#    PROBE_CALIBRATE          ; Замеряем Z-Offset. ;Не испрользуем, т.к. нет возможности считать значение калибровки
#    ABORT                    ; но не сохраняем.
    PROBE                    ; Замеряем Z-Offset
    G1 Z3.5 F3000            ; Поднимаем стол, почти так, как делает PROBE_CALIBRATE

    _CLEAR_NOIZE

    M104 S120 T0             ; Снижаем температуру до 120 градусов
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={118} MAXIMUM={122}

    G1 X-20 Y107 F1200       ; Убираем сопло от стола
    M400
    G1 Z5 F6000
    M400

    LOAD_CELL_TARE           ; Сбрасываем тензодатчики

[gcode_macro _FULL_BED_LEVEL]
description: Калибровка стола без выключения температуры
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
    {% set bed_temp = params.BED_TEMP|default(80)|float %}
    {% set profile = params.PROFILE|default("auto") %}

    RESPOND PREFIX="info" MSG="Калибровка стола. Профиль {profile}. {extruder_temp}/{bed_temp}"

    BED_MESH_CLEAR          ; Очистка профиля стола
    M400

    CLEAR_NOIZE EXTRUDER_TEMP={extruder_temp} BED_TEMP={bed_temp}

    # Начинаем калибровку
    BED_MESH_CALIBRATE PROFILE="{profile}"

    G1 Z100 F3000

[gcode_macro AUTO_FULL_BED_LEVEL]
description: Калибровка стола
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
    {% set bed_temp = params.BED_TEMP|default(80)|float %}
    {% set profile = params.PROFILE|default("auto") %}

    _FULL_BED_LEVEL EXTRUDER_TEMP={extruder_temp} BED_TEMP={bed_temp} PROFILE={profile}

    # Выклчюаем обогрев
    _STOP

# Калибровка PID стола
[gcode_macro M357]
description: Калибровка PID стола
gcode:
  {% if 'E' in params %}
      PID_CALIBRATE HEATER=heater_bed TARGET={params.E}
  {% else %}
      PID_CALIBRATE HEATER=heater_bed TARGET=80
  {% endif %}
  SAVE_CONFIG

[gcode_macro PID_TUNE_BED]
description: Калибровка PID стола
gcode:
  {% set temperature = params.TEMPERATURE|default(80) %}
  G28 Z
  M400
  G28 X
  G28 Y
  M400
  M400

  M107
  PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
  SAVE_CONFIG

# Калибровка PID экструдера
[gcode_macro PID_TUNE_EXTRUDER]
description: Калибровка PID экструдера
gcode:
  {% set temperature = params.TEMPERATURE|default(245) %}
  G28 Z
  M400
  G28 X
  G28 Y
  M400
  M400

  M107
  PID_CALIBRATE HEATER=extruder TARGET={temperature}
  SAVE_CONFIG

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  125
gcode:
    {% set speed = params.SPEED|default(450) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{speed} ; extrude with 7.5mm/s
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  75
gcode:
    {% set speed = params.SPEED|default(450) %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E-{unload_distance} F{speed} ; unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PURGE_FILAMENT]
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(450) %}
    SAVE_GCODE_STATE NAME=purge_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed}   ; purge
    RESTORE_GCODE_STATE NAME=purge_state

[gcode_macro LOAD_MATERIAL]
description: Manual filament loading / change
variable_initial_target_temp: 0
gcode:
    # save gcode state
    SAVE_GCODE_STATE NAME=load_material_state
    # save heating state
    SET_GCODE_VARIABLE MACRO=LOAD_MATERIAL VARIABLE=initial_target_temp VALUE={printer["extruder"].target}

    _LOAD_MATERIAL_SELECT

[gcode_macro _LOAD_MATERIAL_SELECT]
gcode:
    {% if not printer["extruder"].target >= printer.configfile.settings['extruder'].min_extrude_temp %}
        # material selection
        RESPOND TYPE=command MSG="action:prompt_begin Material Selection"
        RESPOND TYPE=command MSG="action:prompt_text Select the material type to heat the nozzle."
        RESPOND TYPE=command MSG="action:prompt_button_group_start"
        RESPOND TYPE=command MSG="action:prompt_button PLA|_LOAD_MATERIAL_HEATUP TEMP=210|primary"
        RESPOND TYPE=command MSG="action:prompt_button PETG|_LOAD_MATERIAL_HEATUP TEMP=240|primary"
        RESPOND TYPE=command MSG="action:prompt_button ABS|_LOAD_MATERIAL_HEATUP TEMP=250|primary"
        RESPOND TYPE=command MSG="action:prompt_button_group_end"
        RESPOND TYPE=command MSG="action:prompt_footer_button Abort|_LOAD_MATERIAL_END"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% else %}
        # skip preheating dialog, but wait for target temp
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer["extruder"].target}
        _LOAD_MATERIAL_ACTION
    {% endif %}

[gcode_macro _LOAD_MATERIAL_HEATUP]
gcode:
    {% set extruder_temp = params.TEMP|default(200)|float %}
    M104 S{extruder_temp}
    RESPOND TYPE=command MSG=action:prompt_end
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
    _LOAD_MATERIAL_ACTION

[gcode_macro _LOAD_MATERIAL_ACTION]
gcode:
    # loading / unloading
    RESPOND TYPE=command MSG="action:prompt_begin Filament Loading"
    RESPOND TYPE=command MSG="action:prompt_text Select filament loading action."
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button Load|LOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Unload|UNLOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Purge|PURGE_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Done|_LOAD_MATERIAL_END"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _LOAD_MATERIAL_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    # restore old temp
    M104 S{printer["gcode_macro LOAD_MATERIAL"].initial_target_temp}
    # restore gcode state
    RESTORE_GCODE_STATE NAME=load_material_state

[gcode_macro M600]
gcode:
    {% set X = params.X|default(printer['gcode_macro _CLIENT_VARIABLE'].custom_park_x)|float %}
    {% set Y = params.Y|default(printer['gcode_macro _CLIENT_VARIABLE'].custom_park_y)|float %}
    {% set Z = params.Z|default(printer['gcode_macro _CLIENT_VARIABLE'].custom_park_dz)|float %}
    PAUSE X={X} Y={Y} Z_MIN={Z}
    M400
    RESPOND TYPE=command MSG="action:prompt_begin Filament change"
    RESPOND TYPE=command MSG="action:prompt_text Filament change requested. Please load new filament and press resume."
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button Load|LOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Unload|UNLOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Purge|PURGE_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Resume|_INTERACTIVE_LOAD_END"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _INTERACTIVE_LOAD_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    RESUME

[gcode_shell_command sync]
command: sync
timeout: 3
verbose: False

[gcode_shell_command reboot]
command: reboot
timeout: 3
verbose: False

[gcode_shell_command poweroff]
command: poweroff
timeout: 3
verbose: False

[gcode_macro SHUTDOWN]
description: Выключить принтер
gcode:
    BED_MESH_CLEAR
    M400
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=poweroff

[gcode_macro REBOOT]
description: Перезагрузить принтер
gcode:
    BED_MESH_CLEAR
    M400
    # Reset button state, otherwise only one trigger can occur
    SET_PIN PIN=clear_power_off VALUE=1
    # There is a deboucing circuit which needs some delay
    G4 P500
    # Disable pin again otherwise on reset the button will be triggered 1-3 times
    SET_PIN PIN=clear_power_off VALUE=0
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_shell_command ztouch]
command: touch
timeout: 5
verbose: True

[gcode_macro REMOVE_ZMOD]
description: Удалить zmod
gcode:
    RUN_SHELL_COMMAND CMD=ztouch PARAMS="/opt/config/mod/REMOVE"
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_macro SKIP_ZMOD]
description: Перезагрузка в оригинальную систему. Без запуска zmod.
gcode:
    RUN_SHELL_COMMAND CMD=ztouch PARAMS="/opt/config/mod/SKIP_ZMOD"
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_macro SOFT_REMOVE]
description: Удалить zmod. Не удалять root, audio, md5
gcode:
    RUN_SHELL_COMMAND CMD=ztouch PARAMS="/opt/config/mod/SOFT_REMOVE"
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_macro LED_ON]
description: Включить подсветку
gcode:
    SET_LED LED=chamber_led WHITE=1

[gcode_macro LED_OFF]
description: Выключить подсветку
gcode:
    SET_LED LED=chamber_led WHITE=0

[gcode_macro LED]
description: Включить подсветку на несколько процентов
gcode:
    {% set S = params.S|default(50)|int %}
    SET_LED LED=chamber_led WHITE={S/100|float}

[gcode_shell_command zdisplay]
command: /root/printer_data/scripts/zdisplay.sh
timeout: 5
verbose: True

[gcode_macro DISPLAY_ON]
description: Включить стандартный экран и перезагрузить принтер
gcode:
    RUN_SHELL_COMMAND CMD=zdisplay PARAMS="on"

[gcode_macro DISPLAY_OFF]
description: Выключить стандартный экран
gcode:
    RUN_SHELL_COMMAND CMD=zdisplay PARAMS="off"
    RESTART

[gcode_shell_command ps_mem]
command: /root/printer_data/scripts/ps_mem.py
timeout: 5
verbose: True

[gcode_shell_command free]
command: free
timeout: 5
verbose: True

[gcode_macro MEM]
description: Посмотреть расход памяти
gcode:
    RUN_SHELL_COMMAND CMD=ps_mem
    RUN_SHELL_COMMAND CMD=free PARAMS="-m"

[gcode_macro AIR_CIRCULATION_INTERNAL]
description: Turn on internal air circulation
gcode:
    SET_FAN_SPEED FAN=external_fan SPEED=0
    SET_FAN_SPEED FAN=internal_fan SPEED=1
    SET_SERVO SERVO=my_servo ANGLE=95

[gcode_macro AIR_CIRCULATION_EXTERNAL]
description: Turn on external air circulation
gcode:
    SET_FAN_SPEED FAN=external_fan SPEED=.8 ;dropped to 80 percent to quiet it down
    SET_FAN_SPEED FAN=internal_fan SPEED=1
    SET_SERVO SERVO=my_servo ANGLE=180

[gcode_macro AIR_CIRCULATION_STOP]
description: Turn off air circulation
gcode:
    SET_FAN_SPEED FAN=external_fan SPEED=0
    SET_FAN_SPEED FAN=internal_fan SPEED=0
    SET_SERVO SERVO=my_servo ANGLE=95

[gcode_shell_command audio_midi]
command: audio_midi.sh
timeout: 30
verbose: True

[gcode_macro PLAY_MIDI]
description: Проиграть MIDI файл
gcode:
    {% set FILE = params.FILE|default("For_Elise.mid")|string %}
    RUN_SHELL_COMMAND CMD=audio_midi PARAMS="{FILE}"

[gcode_shell_command zcamera]
command: /root/printer_data/scripts/zcamera.sh
timeout: 5
verbose: True

[gcode_macro CAMERA_ON]
description: Использовать альтернативную реализацию камеры
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Отключите камеру на экране принтера"
    RESPOND TYPE=command MSG="action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_show"
    {% set WIDTH  = params.WIDTH|default(640)|int %}
    {% set HEIGHT = params.HEIGHT|default(480)|int %}
    {% set FPS    = params.FPS|default(15)|int %}
    RUN_SHELL_COMMAND CMD=zcamera PARAMS="on {WIDTH} {HEIGHT} {FPS} RESTART"

[gcode_macro CAMERA_OFF]
description: Отключить альтернативную реализацию камеры
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Включите камеру на экране принтера"
    RESPOND TYPE=command MSG="action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_show"
    {% set WIDTH  = params.WIDTH|default(640)|int %}
    {% set HEIGHT = params.HEIGHT|default(480)|int %}
    {% set FPS    = params.FPS|default(15)|int %}
    RUN_SHELL_COMMAND CMD=zcamera PARAMS="off {WIDTH} {HEIGHT} {FPS} RESTART"

[gcode_shell_command date]
command: date
timeout: 30
verbose: True

[gcode_macro DATE_GET]
description: Посмотреть время
gcode:
    {% set DT  = params.DT|default("")|string %}
    RUN_SHELL_COMMAND CMD=date

[gcode_macro DATE_SET]
description: Установить дату и время в формате 2024.01.01-00:00:00
gcode:
    {% set DT  = params.DT|default("2024.01.01-00:00:00")|string %}
    RUN_SHELL_COMMAND CMD=date PARAMS="date {DT}"

[gcode_shell_command zhttp]
command: /root/printer_data/scripts/zhttp.sh
timeout: 5
verbose: True

[gcode_macro WEB]
description: Сменить веб интерфейс fluidd/mainsail
gcode:
    RUN_SHELL_COMMAND CMD=zhttp

[gcode_macro _G17]
gcode:
    RESPOND TYPE=echo MSG="Замените Cпиральный/Автоматич. Z-Hop. Принтер его не поддерживает."
    RESPOND TYPE=echo MSG="В Orca. Профиль принтера -> Экструдер 1 -> Тип подъема оси Z. Установите Обычный или Наклонный."

[gcode_macro G17]
gcode:
    _G17

[gcode_macro G18]
gcode:
    _G17

[gcode_macro G19]
gcode:
    _G17

[gcode_macro _STOP]
description: Отключить нагрев и кулер
gcode:
    M400
    M220 S100               ; Скорость 100%
    M221 S100               ; Экструзия 100%
    M140 S0                 ; Отключить нагрев стола
    M104 S0                 ; Отключить нагрев экструдера
    M106 S0                 ; Отключить кулер
    M107                    ; Отключить кулер экструдера
    SET_SKEW CLEAR=1        ; reset skew profile if loaded

    SET_PIN PIN=level_h1 VALUE=0
    G4 P505
    SET_PIN PIN=level_clear VALUE=0
    G4 P5

    RESPOND PREFIX="info" MSG="Печать завершена"

[gcode_macro STOP]
description: Отключить моторы, кулер, и нагрев
gcode:
    _STOP                   ; Отключить нагрев и кулер
    M84                     ; Выключить мотор

[gcode_shell_command zrm]
command: /root/printer_data/scripts/zrm.sh
timeout: 5
verbose: True

[gcode_shell_command zcp]
command: /root/printer_data/scripts/zcp.sh
timeout: 5
verbose: True

[gcode_macro ZSHAPER]
description: Калибровка шейперов
gcode:
    RUN_SHELL_COMMAND CMD=zrm
    G28 Z
    M400
    G28 X
    G28 Y
    M400
    M400

    SHAPER_CALIBRATE
    RUN_SHELL_COMMAND CMD=zcp
    RESPOND TYPE=echo MSG="Шейперы лежат в конфигурации mod_data/."
    RESPOND TYPE=echo MSG="Скачайте оттуда csv файлы."
    RESPOND TYPE=echo MSG="Программа для построения графиков."
    RESPOND TYPE=echo MSG="https://github.com/theycallmek/Klipper-Input-Shaping-Assistant/releases"

[gcode_shell_command ls]
command: ls
timeout: 5
verbose: True

[gcode_shell_command ln]
command: ln
timeout: 5
verbose: True

[gcode_shell_command rm]
command: rm
timeout: 5
verbose: True

[gcode_macro SET_TIMEZONE]
description: Смена часового пояса
gcode:
    {% set ZONE  = params.ZONE|default("Europe/Moscow")|string %}
    RESPOND TYPE=echo MSG="Доступные зоны Europe/."
    RUN_SHELL_COMMAND CMD=ls PARAMS="/usr/share/zoneinfo/Europe"
    RESPOND TYPE=echo MSG="Доступные зоны Asia/."
    RUN_SHELL_COMMAND CMD=ls PARAMS="/usr/share/zoneinfo/Asia"
    RESPOND TYPE=echo MSG="Использование SET_TIMEZONE ZONE=Asia/Yekaterinburg"
    RUN_SHELL_COMMAND CMD=rm PARAMS="/etc/localtime"
    RUN_SHELL_COMMAND CMD=ln PARAMS="-s /usr/share/zoneinfo/{ZONE} /etc/localtime"
    RUN_SHELL_COMMAND CMD=date

[include KAMP_Settings.cfg]

[gcode_macro KAMP]
description: Адаптивная кровать
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
    {% set bed_temp = params.BED_TEMP|default(80)|float %}

    BED_MESH_CLEAR          ; Очистка профиля стола
    M400

    CLEAR_NOIZE EXTRUDER_TEMP={extruder_temp} BED_TEMP={bed_temp}

    _KAMP_BED_MESH_CALIBRATE

    M190 S{bed_temp}
    M109 S{extruder_temp}

[gcode_shell_command tar]
command: tar
timeout: 5
verbose: True

[gcode_macro TAR_CONFIG]
description: Сохраняет файлы конфигурации в архив
gcode:
    RUN_SHELL_COMMAND CMD=tar PARAMS="-cf /opt/config/mod_data/config.tar --exclude /opt/config/mod_data/config.tar.gz /opt/config/ /data/logFiles/firmwareExe.log /data/logFiles/firmwareExe2.log /data/logFiles/meminfo.complete.log /data/logFiles/printer.log /data/logFiles/ssh.log /data/logFiles/moonraker.log /data/logFiles/ffstartup-arm.log /data/logFiles/dmesg.complete.log"
    RESPOND PREFIX="info" MSG="Скачать архив можно в 'Конфигурация' -> 'mod_data' -> config.tar"

[gcode_shell_command stop_zmod]
command: /etc/init.d/S99moon
timeout: 5
verbose: True

[gcode_macro STOP_ZMOD]
description: Остановить fluidd/mainsail и moonraker
gcode:
    RUN_SHELL_COMMAND CMD=stop_zmod PARAMS="stop"

[gcode_macro START_ZMOD]
description: Запустить fluidd/mainsail и moonraker после STOP_ZMOD
gcode:
    RUN_SHELL_COMMAND CMD=stop_zmod PARAMS="start2"

[gcode_shell_command zssh]
command: /root/printer_data/scripts/zssh.sh
timeout: 5
verbose: True

[gcode_macro ZSSH_ON]
description: Перенаправить moonraker и камеру на SSH сервер
gcode:
    {% set ssh_server  = params.SSH_SERVER|default("127.0.0.1")|string %}
    {% set ssh_port    = params.SSH_PORT|default(22)|int %}
    {% set ssh_user    = params.SSH_USER|default("user")|string %}
    {% set video_port  = params.VIDEO_PORT|default(8080)|int %}
    {% set moon_port   = params.MOON_PORT|default(7125)|int %}
    RUN_SHELL_COMMAND CMD=zssh PARAMS="START {ssh_server} {ssh_port} {ssh_user} {video_port} {moon_port} RESTART"

[gcode_macro ZSSH_OFF]
description: Отключить проброс портов SSH
gcode:
    RUN_SHELL_COMMAND CMD=zssh PARAMS="STOP 127.0.0.1 22 user 8080 7125 RESTART"

[gcode_macro ZSSH_RESTART]
description: Перезапуск SSH
gcode:
    RUN_SHELL_COMMAND CMD=zssh PARAMS="RESTART 127.0.0.1 22 user 8080 7125 RESTART"

[gcode_macro _PRIME_NOZZLE]
description: Код очистки из Orca Slicer
gcode:
    G90
    M83
    G1 Z5 F6000
    G1 E-0.2 F800
    G1 X110 Y-110 F6000
    G1 E2 F800
    G1 Y-110 X55 Z0.25 F4800
    G1 X-55 E8 F2400
    G1 Y-109.6 F2400
    G1 X55 E5 F2400
    G1 Y-110 X55 Z0.45 F4800
    G1 X-55 E8 F2400
    G1 Y-109.6 F2400
    G1 X55 E5 F2400
    G92 E0

[gcode_macro _START_PRINT]
description: Замена стандартного стартового G-code
gcode:
    {% set bed_temp = params.BED_TEMP|default(80)|float %}             ; bed temp, usually set by slicer
    {% set extruder_temp = params.EXTRUDER_TEMP|default(245)|float %}  ; extruder temp, usually set by slicer
    {% set disable_priming = params.DISABLE_PRIMING|default(false) %}  ; allow disabling of priming before print
    {% set disable_skew = params.DISABLE_SKEW_CORRECT|default(true) %} ; if true it will not apply the skew correction profile
    {% set force_leveling = params.FORCE_LEVELING|default(false) %}    ; if true it forces the bed level process
    {% set force_kamp = params.FORCE_KAMP|default(false) %}            ; if true it forces the KAMP bed level process
    {% set force_md5 = params.FORCE_MD5|default(true) %}               ; если true - проверять MD5 сумму файла, при ошибке - удалять файл. Пропишите в крипты постобработки вызов addMD5.bat (true)
    {% set zoffset = params.Z_OFFSET|default(0.0)|float %}             ; Установить Z offset
    {% set skip_zoffset = params.SKIP_ZOFFSET|default(false) %}        ; Для печати с родного экрана не устанавливать Z offset
    {% set skip_leveling = params.SKIP_LEVELING|default(false) %}      ; Не строить карту
    {% set mesh = params.MESH|default("")|string %}                    ; Имя профиля карты стола

    RESPOND PREFIX="info" MSG="START_PRINT BED_TEMP={bed_temp} EXTRUDER_TEMP={extruder_temp} DISABLE_PRIMING={disable_priming} DISABLE_SKEW_CORRECT={disable_skew} FORCE_LEVELING={force_leveling} FORCE_KAMP={force_kamp} FORCE_MD5={force_md5} Z_OFFSET={zoffset} SKIP_ZOFFSET={skip_zoffset} SKIP_LEVELING={skip_leveling} MESH={mesh}"

    {%if force_md5 %}
        RESPOND PREFIX="info" MSG="Запущена проверка MD5"
        CHECK_MD5 DELETE=true
    {% endif %}

    M140 S{bed_temp}        ; start bed heating
    SET_SKEW CLEAR=1        ; reset skew profile if loaded

    {%if skip_zoffset %}
        RESPOND PREFIX="info" MSG="Установка Z-offset пропущена, SKIP_ZOFFSET={skip_zoffset}"
    {% else %}
        RESPOND PREFIX="info" MSG="Установка Z-offset {zoffset}, SKIP_ZOFFSET={skip_zoffset}"
        SET_GCODE_OFFSET Z={zoffset}
    {% endif %}

    G28 Z
    M400
    G28 X
    G28 Y
    M400
    M400

    {% if mesh != "" %}
        RESPOND PREFIX="info" MSG="Загрузка карты стола {mesh}"
        BED_MESH_CLEAR
        M400
        BED_MESH_PROFILE LOAD={mesh}
    {% endif %}

    {%if not skip_leveling %}
        {%if force_kamp %}
            RESPOND PREFIX="info" MSG="Запущен KAMP"
            KAMP BED_TEMP={bed_temp} EXTRUDER_TEMP={extruder_temp}
        {% else %}
            {%if (not printer['bed_mesh'].profile_name) or force_leveling %}
                {% if mesh != "" %}
                    RESPOND PREFIX="info" MSG="Запущено построение карты стола {mesh}"
                    RESPOND PREFIX="info" MSG="Сохраните ее ПОСЛЕ печати"
                    _FULL_BED_LEVEL BED_TEMP={bed_temp} EXTRUDER_TEMP={extruder_temp} PROFILE={mesh}
                {% else %}
                    RESPOND PREFIX="info" MSG="Запущено построение карты стола"
                    _FULL_BED_LEVEL BED_TEMP={bed_temp} EXTRUDER_TEMP={extruder_temp}
                {% endif %}
            {% endif %}
            RESPOND PREFIX="info" MSG="Нет необходимости строить карту  стола, она уже  загружена"
        {% endif %}
    {% else %}
        RESPOND PREFIX="info" MSG="Карта стола не строится, SKIP_LEVELING={skip_leveling}"
    {% endif %}

    G90                     ; use absolute coordinates
    G1 Z10 F1800            ; move the nozzle near the bed
    # wait for bed to reach temp, don't wait for stabilization
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp}
    M109 S{extruder_temp}   ; set and wait for nozzle to reach temperature

    {% if disable_priming %}
        RESPOND PREFIX="info" MSG="Очистка сопла линией отключена. DISABLE_PRIMING={disable_priming}"
    {% else %}
        RESPOND PREFIX="info" MSG="Очистка сопла линией"
        _PRIME_NOZZLE
    {% endif %}

    # load skew profile
    {% if not disable_skew %}
        RESPOND PREFIX="info" MSG="Загрузка skew_profile"
        SKEW_PROFILE LOAD=skew_profile
    {% endif %}

[delayed_gcode restart_services]
initial_duration: 240
gcode:
    RUN_SHELL_COMMAND CMD=zdisplay PARAMS="test"
    ZSSH_RESTART
    M300 S392 P25
    M300 S494 P25
    M300 S587 P25
    M300 S523 P30
    LED
