# Регулировка винтов
[screws_tilt_adjust]
screw1: -94, -94
screw1_name: front left screw
screw2: 94, -94
screw2_name: front right screw
screw3: 94, 94
screw3_name: rear right screw
screw4: -94, 94
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 600.
screw_thread: CW-M4

# Макрос для M300 - Звук
[gcode_shell_command audio_freq]
command: audio freq
timeout: 3
verbose: False

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|float %}
    RUN_SHELL_COMMAND CMD=audio_freq PARAMS="-f {S} -d {P / 1000}"

# Лунная соната
[gcode_macro M356]
gcode:
    M300 S1318 P50
    M300 S1244 P50
    M300 S1318 P50
    M300 S1244 P50
    M300 S1318 P50
    M300 S987 P50
    M300 S1174 P50
    M300 S1046 P50
    M300 S880 P100

[gcode_macro CHECK_MD5]
gcode:
  {% if 'FILENAME' in params %}
    {% set filename = params.FILENAME|default("")|string %}
  {% else %}
    {% set filename = printer.virtual_sdcard.file_path|default("")|string  %}
  {% endif %}

  {% if filename != "" %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

    {% if 'DELETE' in params %}
      {% set delete = params.DELETE|default("false")|string %}
    {% endif %}

    RUN_SHELL_COMMAND CMD=check_md5 PARAMS={'"%s %s"' % (filename.replace(" ", "\ "), delete)}
  {% endif %}

# Проверка чек суммы md5
[gcode_shell_command check_md5]
command: /root/printer_data/scripts/checkMD5.sh
timeout: 65.
verbose: False

[gcode_macro Bed_Level_Screws_Tune]
gcode:
      BED_MESH_CLEAR
      SET_BED_TEMPERATURE TARGET=80
      BED_TEMPERATURE_WAIT MINIMUM=78 MAXIMUM=85
      G28
      SCREWS_TILT_CALCULATE

[gcode_macro Auto_Full_Bed_Level]
gcode:
      RESPOND PREFIX="info" MSG="Running Custom Bed Leveling Macro"
      BED_MESH_CLEAR
      SET_BED_TEMPERATURE TARGET=80
      BED_TEMPERATURE_WAIT MINIMUM=78 MAXIMUM=85
      G28
      BED_MESH_CALIBRATE

# Калибровка PID стола
[gcode_macro M357]
gcode:
  {% if 'E' in params %}
      PID_CALIBRATE HEATER=heater_bed TARGET={params.E}
  {% else %}
      PID_CALIBRATE HEATER=heater_bed TARGET=80
  {% endif %}
  SAVE_CONFIG

[gcode_macro PID_Tune_BED]
gcode:
  {% set temperature = params.TEMPERATURE|default(80) %}
  G28
  M106 S255 ;Sets Print Fans to 100%
  PID_CALIBRATE HEATER=heater_bed TARGET={temperature}
  SAVE_CONFIG

# Калибровка PID экструдера
[gcode_macro PID_Tune_EXTRUDER]
gcode:
  {% set temperature = params.TEMPERATURE|default(245) %}
  G28
  M106 S255
  PID_CALIBRATE HEATER=extruder TARGET={temperature}
  SAVE_CONFIG

[gcode_shell_command zremove]
command: /root/printer_data/scripts/zremove.sh
timeout: 5
verbose: True

[gcode_macro REMOVE_ZMOD]
description: Remove ZMOD
gcode:
  RUN_SHELL_COMMAND CMD=zremove

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  125
gcode:
    {% set speed = params.SPEED|default(450) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{speed} ; extrude with 7.5mm/s
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  75
gcode:
    {% set speed = params.SPEED|default(450) %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E-{unload_distance} F{speed} ; unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PURGE_FILAMENT]
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(450) %}
    SAVE_GCODE_STATE NAME=purge_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed}   ; purge
    RESTORE_GCODE_STATE NAME=purge_state

[gcode_macro LOAD_MATERIAL]
description: Manual filament loading / change
variable_initial_target_temp: 0
gcode:
    # save gcode state
    SAVE_GCODE_STATE NAME=load_material_state
    # save heating state
    SET_GCODE_VARIABLE MACRO=LOAD_MATERIAL VARIABLE=initial_target_temp VALUE={printer["extruder"].target}

    _LOAD_MATERIAL_SELECT

[gcode_macro _LOAD_MATERIAL_SELECT]
gcode:
    {% if not printer["extruder"].target >= printer.configfile.settings['extruder'].min_extrude_temp %}
        # material selection
        RESPOND TYPE=command MSG="action:prompt_begin Material Selection"
        RESPOND TYPE=command MSG="action:prompt_text Select the material type to heat the nozzle."
        RESPOND TYPE=command MSG="action:prompt_button_group_start"
        RESPOND TYPE=command MSG="action:prompt_button PLA|_LOAD_MATERIAL_HEATUP TEMP=210|primary"
        RESPOND TYPE=command MSG="action:prompt_button PETG|_LOAD_MATERIAL_HEATUP TEMP=240|primary"
        RESPOND TYPE=command MSG="action:prompt_button ABS|_LOAD_MATERIAL_HEATUP TEMP=250|primary"
        RESPOND TYPE=command MSG="action:prompt_button_group_end"
        RESPOND TYPE=command MSG="action:prompt_footer_button Abort|_LOAD_MATERIAL_END"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% else %}
        # skip preheating dialog, but wait for target temp
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer["extruder"].target}
        _LOAD_MATERIAL_ACTION
    {% endif %}

[gcode_macro _LOAD_MATERIAL_HEATUP]
gcode:
    {% set extruder_temp = params.TEMP|default(200)|float %}
    M104 S{extruder_temp}
    RESPOND TYPE=command MSG=action:prompt_end
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
    _LOAD_MATERIAL_ACTION

[gcode_macro _LOAD_MATERIAL_ACTION]
gcode:
    # loading / unloading
    RESPOND TYPE=command MSG="action:prompt_begin Filament Loading"
    RESPOND TYPE=command MSG="action:prompt_text Select filament loading action."
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button Load|LOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Unload|UNLOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Purge|PURGE_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Done|_LOAD_MATERIAL_END"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _LOAD_MATERIAL_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    # restore old temp
    M104 S{printer["gcode_macro LOAD_MATERIAL"].initial_target_temp}
    # restore gcode state
    RESTORE_GCODE_STATE NAME=load_material_state

[gcode_macro M600]
gcode:
    {% set X = params.X|default(printer['gcode_macro _CLIENT_VARIABLE'].custom_park_x)|float %}
    {% set Y = params.Y|default(printer['gcode_macro _CLIENT_VARIABLE'].custom_park_y)|float %}
    {% set Z = params.Z|default(printer['gcode_macro _CLIENT_VARIABLE'].custom_park_dz)|float %}
    PAUSE X={X} Y={Y} Z_MIN={Z}
    M400
    RESPOND TYPE=command MSG="action:prompt_begin Filament change"
    RESPOND TYPE=command MSG="action:prompt_text Filament change requested. Please load new filament and press resume."
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button Load|LOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Unload|UNLOAD_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button Purge|PURGE_FILAMENT|primary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Resume|_INTERACTIVE_LOAD_END"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _INTERACTIVE_LOAD_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"
    RESUME

[gcode_shell_command sync]
command: sync
timeout: 3
verbose: False

[gcode_shell_command reboot]
command: reboot
timeout: 3
verbose: False

[gcode_shell_command poweroff]
command: poweroff
timeout: 3
verbose: False

[gcode_macro SHUTDOWN]
gcode:
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=poweroff

[gcode_macro REBOOT]
gcode:
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_shell_command ztouch]
command: touch
timeout: 5
verbose: True

[gcode_macro SKIP_ZMOD]
description: Reboot to original system
gcode:
    RUN_SHELL_COMMAND CMD=ztouch PARAMS="/opt/config/mod/SKIP_ZMOD"
    RUN_SHELL_COMMAND CMD=sync
    RUN_SHELL_COMMAND CMD=reboot

[gcode_macro LED_ON]
description: Turn on the LED.
gcode:
    SET_LED LED=chamber_led WHITE=1

[gcode_macro LED_OFF]
description: Turn off the LED.
gcode:
    SET_LED LED=chamber_led WHITE=0

[gcode_macro LED]
description: Turn on the LED 50%.
gcode:
    SET_LED LED=chamber_led WHITE=0.5

[gcode_shell_command zdiplay]
command: /root/printer_data/scripts/zdisplay.sh
timeout: 5
verbose: True

[gcode_macro DISPLAY_ON]
description: Enable diplay and reboot
gcode:
    RUN_SHELL_COMMAND CMD=zdiplay PARAMS="on"

[gcode_macro DISPLAY_OFF]
description: Disable diplay
gcode:
    RUN_SHELL_COMMAND CMD=zdiplay PARAMS="off"
    RESTART

[gcode_shell_command ps_mem]
command: /root/printer_data/scripts/ps_mem.py
timeout: 5
verbose: True

[gcode_shell_command free]
command: free
timeout: 5
verbose: True

[gcode_macro MEM]
description: Show used memory
gcode:
    RUN_SHELL_COMMAND CMD=ps_mem
    RUN_SHELL_COMMAND CMD=free PARAMS="-m"

[gcode_macro AIR_CIRCULATION_INTERNAL]
description: Turn on internal air circulation
gcode:
    SET_FAN_SPEED FAN=external_fan SPEED=0
    SET_FAN_SPEED FAN=internal_fan SPEED=1
    SET_SERVO SERVO=my_servo ANGLE=95

[gcode_macro AIR_CIRCULATION_EXTERNAL]
description: Turn on external air circulation
gcode:
    SET_FAN_SPEED FAN=external_fan SPEED=.8 ;dropped to 80 percent to quiet it down
    SET_FAN_SPEED FAN=internal_fan SPEED=1
    SET_SERVO SERVO=my_servo ANGLE=180

[gcode_macro AIR_CIRCULATION_STOP]
description: Turn off air circulation
gcode:
    SET_FAN_SPEED FAN=external_fan SPEED=0
    SET_FAN_SPEED FAN=internal_fan SPEED=0
    SET_SERVO SERVO=my_servo ANGLE=95
