#!/bin/bash

## Mod's boot script
##
## Copyright (C) 2025, Alexander K <https://github.com/drA1ex>
##
## This file may be distributed under the terms of the GNU GPLv3 license


source /opt/config/mod/.shell/common.sh

skip_mod() {
    echo "Boot disabled due to SKIP_MOD mode"

    if ! /opt/config/mod/.shell/commands/zdisplay.sh test; then
        echo "// Reverting configuration to be suitable with the enabled screen"
        
        mount_data_partition

        # Need to mount config directory for chroot
        mount --bind /opt/config "$MOD/opt/config"
        init_chroot
        
        /opt/config/mod/.shell/commands/zdisplay.sh on --skip-reboot

        echo "// Cleaning up..."
        
        dispose_chroot
        umount "$MOD/opt/config"
        umount /data
        
        echo "// Done. Continue boot..."
    fi
}

start() {    
    /opt/config/mod/.shell/boot/boot.sh
    
    IP="$(ip addr show wlan0 | awk '/inet / {print $2}' | cut -d'/' -f1 2> /dev/null)"
    [ -z "$IP" ] && IP="$(ip addr show eth0 | awk '/inet / {print $2}' | cut -d'/' -f1 2> /dev/null)"
    [ -n "$IP" ] && echo "$IP" > "$WLAN_IP_F"
    
    fstrim -v /root
    fstrim -v /data
}

# wait_for_internet() {
#     for _ in $(seq 30); do
#         if ping -c4 8.8.8.8; then
#             audio freq -f 880 &
#             break
#         fi
#         sleep 3
#     done
# }

case "$1" in
    start)
        if [ -f "$NOT_FIRST_LAUNCH_F" ]; then echo "start() method meant to be only for fresh start!"; exit 0; fi

        if [ -f /tmp/SKIP_MOD ] || [ -f /tmp/SKIP_MOD_SOFT ]; then
            skip_mod 2>&1 | logged "/opt/config/mod_data/log/skip.log" --send-to-screen
        
            exit 0
        fi
        
        start 2>&1 | logged "/data/logFiles/boot.log" --send-to-screen
        # wait_for_internet &
    ;;
    *)
        echo "Usage $0 start"
    ;;
esac

touch "/tmp/boot_$1"