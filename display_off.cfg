[include base.cfg]

# define overrides for Mainsail/Fluidd predefined macros - see client.cfg
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True    ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 108.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 108.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 10.0    ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_speed_hop        : 20.0    ; z move speed in mm/s
variable_speed_move       : 100.0   ; move speed in mm/s
variable_user_cancel_macro: "_CANCEL_PRINT_WITH_AUDIO_WARNING"
variable_park_at_cancel   : True    ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 108.0   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 108.0   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_runout_sensor    : "filament_switch_sensor e0_sensor"
gcode:

[gcode_macro _CANCEL_PRINT_WITH_AUDIO_WARNING]
gcode:
    UPDATE_DELAYED_GCODE ID=print_progress DURATION=0
    RUN_SHELL_COMMAND CMD=screen PARAMS='end_print "Cancelled"'

    TONE NOTES="440:70 140 349:70 140 262:140"

    _COMMON_END_PRINT


# macos is used by END_PRINT and CANCEL_PRINT
[gcode_macro _COMMON_END_PRINT]
gcode:
    _STOP
    SET_FAN_SPEED FAN=pcb_fan SPEED=0

    {% set zstop_motor = printer.mod_params.variables.stop_motor %}
    {% if zstop_motor == 1 %}
        UPDATE_DELAYED_GCODE ID=_STOP_MOTOR DURATION=25
    {% endif %}

    UPDATE_DELAYED_GCODE ID=print_progress DURATION=0
    UPDATE_DELAYED_GCODE ID=reset_screen DURATION=60

[include client.cfg]

[delayed_gcode prepare_display_off]
initial_duration: 1
gcode:
    BED_MESH_CLEAR
    BED_MESH_PROFILE LOAD=auto

[delayed_gcode reset_screen]
initial_duration: 1
gcode:
    RUN_SHELL_COMMAND CMD=screen PARAMS='draw_splash'

[gcode_macro START_PRINT]
description: Starting Gcode
variable_preparation_done: False
gcode:
    RESPOND MSG="START_PRINT"
    {% set extruder_temp = params.EXTRUDER_TEMP|default(245)|float %}  ; extruder temp, usually set by slicer
    {% set bed_temp = params.BED_TEMP|default(80)|float %}             ; bed temp, usually set by slicer
    {% set force_kamp = params.FORCE_KAMP|default(False) %}            ; if True it forces the KAMP bed level process
    {% set force_leveling = params.FORCE_LEVELING|default(False) %}    ; if True it forces the bed level process
    {% set skip_leveling = params.SKIP_LEVELING|default(False) %}      ; Don't create bed mesh
    {% set skip_zoffset = params.SKIP_ZOFFSET|default(True) %}         ; Skip loading Z-Offset
    {% set zoffset = params.Z_OFFSET|default(0.0)|float %}             ; Z offset
    {% set mesh = params.MESH|default("")|string %}                    ; Bed mesh profile name
    
    SET_FAN_SPEED FAN=pcb_fan SPEED=1

    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zforce_kamp VALUE={force_kamp|int}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zbed_temp VALUE={bed_temp|float}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zextruder_temp VALUE={extruder_temp|float}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zforce_leveling VALUE={force_leveling}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zforce_kamp VALUE={force_kamp}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zskip_zoffset VALUE={skip_zoffset}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zskip_leveling VALUE={skip_leveling}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zzoffset VALUE={zoffset|float}
    SET_GCODE_VARIABLE MACRO=_START_PRINT VARIABLE=zmesh VALUE='"{mesh|string}"'

    {% set filename = printer.virtual_sdcard.file_path or "Unknown" %}
    {% set filename = filename.split("/")[-1].split(".gcode")[0] %}
    RUN_SHELL_COMMAND CMD=screen PARAMS='print_file "{filename}"'

    UPDATE_DELAYED_GCODE ID=print_progress DURATION=30

    _START_PRINT

[gcode_macro END_PRINT]
description: Ending Gcode
gcode:
    {% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
    {% if ("xyz" in printer.toolhead.homed_axes) %}
        {% if printer.extruder.can_extrude %}
            # move away while retracting filament
            MOVE_SAFE X=2 Y=2 E=-5 F=2000
        {% endif %}
        # move down a little
        MOVE_SAFE Z=50  F=600 ABSOLUTE=0
        # move to park position
        MOVE_SAFE X={client.custom_park_x} Y={client.custom_park_y} F=3000 ABSOLUTE=1
        M400
    {% endif %}

    UPDATE_DELAYED_GCODE ID=print_progress DURATION=0
    RUN_SHELL_COMMAND CMD=screen PARAMS='end_print'

    TONE NOTES="988:200 100 824:200 100 740:200 100 659:400"

    _COMMON_END_PRINT
    _MAYBE_AUTO_REBOOT

[delayed_gcode print_progress]
gcode:
    {% set ratio = (printer.display_status.progress * 100) | int %}
    RUN_SHELL_COMMAND CMD=screen PARAMS='print_progress {ratio}'

    {% set status = printer.idle_timeout.state %}
    {% if status == "Printing" %}
        UPDATE_DELAYED_GCODE ID=print_progress DURATION=30
    {% else %}
        RESPOND PREFIX="!!" MSG="Cannot show print progress. Status: {status}"
        UPDATE_DELAYED_GCODE ID=reset_screen DURATION=1
    {% endif %}
